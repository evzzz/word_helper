{"version":3,"file":"static/js/691.6624b10a.chunk.js","mappings":"0KAGA,aAkBSA,EAAAA,EAAAA,KAACC,EAAAA,QAAuB,CAACC,mBAjBJC,IAC1B,MAAMC,EAAe,CAAC,qBAAO,eAAM,eAAM,qBAAO,qBAAO,SAAK,SAAK,SAAK,SAAK,gBAE3E,OAAOD,EACJE,MAAM,MACNC,KAAKC,GACJA,EACGF,MAAM,KACNC,KAAKE,GAASA,EAAKC,SACnBH,KAAKE,GAASA,EAAKE,QAAQ,IAAK,MAChCC,QAAQH,GAASI,QAAQJ,IAA+B,IAAtBA,EAAKK,QAAQ,OAC/CP,KAAKE,GAAUJ,EAAaU,SAASN,GAAQA,EAAI,IAAAO,OAAOP,KACxDQ,KAAK,OAETA,KAAK,KAAK,G,0FCdjB,QAAeC,IAA2B,IAA1B,mBAACf,GAAmBe,EAClC,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IAG/C,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,eAAe,SAAQC,SAAA,EACjD1B,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACK,MAAI,EAACC,GAAI,EAAEF,UACf1B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACRC,MAAM,2BACNC,WAAS,EACTC,QAAS,GACTC,WAAS,EACTC,QAAQ,WACRC,MAAOjB,EACPkB,SAAWC,GAAMlB,EAAekB,EAAEC,OAAOH,YAG7CnC,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACK,MAAI,EAACC,GAAI,EAAEF,UACf1B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACRC,MAAM,iCACNC,WAAS,EACTQ,WAAY,CAAEC,UAAU,GACxBR,QAAS,GACTC,WAAS,EACTC,QAAQ,WACRC,MAAOjC,EAAmBgB,SAKnC,C","sources":["AddPlusBeforeWords.js","FormWordsTransformation.js"],"sourcesContent":["import React from \"react\";\nimport FormWordsTransformation from \"./FormWordsTransformation\";\n\nexport default () => {\n  const appPlusBeforeWords = (input) => {\n    const prepositions = [\"под\", \"на\", \"от\", \"для\", \"при\", \"у\", \"в\", \"и\", \"к\", \"по\"];\n\n    return input\n      .split(\"\\n\")\n      .map((string) =>\n        string\n          .split(\" \")\n          .map((word) => word.trim())\n          .map((word) => word.replace('+', ''))\n          .filter((word) => Boolean(word) && word.indexOf(\"-\") !== 0)\n          .map((word) => (prepositions.includes(word) ? word : `+${word}`))\n          .join(\" \")\n      )\n      .join(\"\\n\");\n  };\n\n  return <FormWordsTransformation transformWordsFunc={appPlusBeforeWords} />;\n};\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default ({transformWordsFunc}) => {\n  const [inputString, setInputString] = useState(\"\");\n\n\n  return (\n    <Grid container spacing={4} justifyContent=\"center\">\n      <Grid item xs={5}>\n        <TextField\n          label=\"Вход\"\n          multiline\n          minRows={30}\n          fullWidth\n          variant=\"outlined\"\n          value={inputString}\n          onChange={(e) => setInputString(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={5}>\n        <TextField\n          label=\"Выход\"\n          multiline\n          InputProps={{ readOnly: true }}\n          minRows={30}\n          fullWidth\n          variant=\"outlined\"\n          value={transformWordsFunc(inputString)}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n"],"names":["_jsx","FormWordsTransformation","transformWordsFunc","input","prepositions","split","map","string","word","trim","replace","filter","Boolean","indexOf","includes","concat","join","_ref","inputString","setInputString","useState","_jsxs","Grid","container","spacing","justifyContent","children","item","xs","TextField","label","multiline","minRows","fullWidth","variant","value","onChange","e","target","InputProps","readOnly"],"sourceRoot":""}