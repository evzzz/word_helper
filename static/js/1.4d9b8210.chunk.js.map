{"version":3,"sources":["AddPlusBeforeWords.js"],"names":["useState","inputString","setInputString","container","spacing","justify","item","xs","label","multiline","rows","fullWidth","variant","value","onChange","e","target","InputProps","readOnly","input","prepositions","split","map","string","word","trim","filter","Boolean","indexOf","includes","join","appPlusBeforeWords"],"mappings":"gKAIe,qBAAO,IAAD,EACmBA,mBAAS,IAD5B,mBACZC,EADY,KACCC,EADD,KAmBnB,OACE,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAClC,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEC,MAAM,2BACNC,WAAS,EACTC,KAAM,GACNC,WAAS,EACTC,QAAQ,WACRC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAea,EAAEC,OAAOH,WAG7C,kBAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CACEC,MAAM,iCACNC,WAAS,EACTQ,WAAY,CAAEC,UAAU,GACxBR,KAAM,GACNC,WAAS,EACTC,QAAQ,WACRC,MArCmB,SAACM,GAC1B,IAAMC,EAAe,CAAC,qBAAO,eAAM,eAAM,qBAAO,qBAAO,SAAK,SAAK,UAEjE,OAAOD,EACJE,MAAM,MACNC,KAAI,SAACC,GAAD,OACHA,EACGF,MAAM,KACNC,KAAI,SAACE,GAAD,OAAUA,EAAKC,UACnBC,QAAO,SAACF,GAAD,OAAUG,QAAQH,IAA+B,IAAtBA,EAAKI,QAAQ,QAC/CN,KAAI,SAACE,GAAD,OAAWJ,EAAaS,SAASL,GAAQA,EAA9B,WAAyCA,MACxDM,KAAK,QAETA,KAAK,MAwBKC,CAAmB9B","file":"static/js/1.4d9b8210.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default () => {\n  const [inputString, setInputString] = useState(\"\");\n\n  const appPlusBeforeWords = (input) => {\n    const prepositions = [\"под\", \"на\", \"от\", \"для\", \"при\", \"у\", \"в\", \"и\"];\n\n    return input\n      .split(\"\\n\")\n      .map((string) =>\n        string\n          .split(\" \")\n          .map((word) => word.trim())\n          .filter((word) => Boolean(word) && word.indexOf('-') !== 0)\n          .map((word) => (prepositions.includes(word) ? word : `+${word}`))\n          .join(\" \")\n      )\n      .join(\"\\n\");\n  };\n\n  return (\n    <Grid container spacing={4} justify=\"center\">\n      <Grid item xs={5}>\n        <TextField\n          label=\"Вход\"\n          multiline\n          rows={30}\n          fullWidth\n          variant=\"outlined\"\n          value={inputString}\n          onChange={(e) => setInputString(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={5}>\n        <TextField\n          label=\"Выход\"\n          multiline\n          InputProps={{ readOnly: true }}\n          rows={30}\n          fullWidth\n          variant=\"outlined\"\n          value={appPlusBeforeWords(inputString)}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n"],"sourceRoot":""}